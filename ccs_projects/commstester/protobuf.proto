// Protobuf proto definition file for MAAV
// Sasawat Prankprakma November 2014
// Version 2

// Note: required uint32 cmd appears in all messages to more efficiently handle the decoding of messages on the Tiva
// side by eliminating the need to make sure the message is decoded as the correct type. Doing this increases the 
// memory use by a about 50 bytes dynamic while significantly reducing execution time that would have been spent 
// trying to identify what message was sent. If only static memory is used in the the decoding process, using the cmd
// field both reduces memory usage and execution time. 
//
// All messages received on the Tiva side are interpreted as an "all" message at the very bottom. Flags in the cmd 
// field are required to tell the Tiva to do things as message type alone will not suffice as all messages received are
// interpreted as "all" type message. 
//
// Valid values for the cmd field are as follows
// MESSAGING_FLAG_NEW_SETPOINT 1
// Atom -> Tiva: Set new setpoint (Target or Tuning Message). Also include new f32[XYZH]Desired values (if changed)
// MESSAGING_FLAG_SET_LOCATION 2
// Atom -> Tiva: This is your current location (Pose Message). Also include new f32[XYZ]Reported (if changed)
// MESSAGING_FLAG_SET_PIDCONST 4
// Atom -> Tiva: Set new PID Constants (Tuning Message). Also include the new PID consts (e.g. KPX, KIZDot, etc.) since
// the last message. 
// MESSAGING_FLAG_LAND 8
// Atom -> Tiva: Land (Any Message, (usually target??)). No other values needed
// MESSAGING_FLAG_TAKEOFF 16
// Atom -> Tiva: Takeoff (Any Message, (usually target??)). No other values needed
// MESSAGING_FLAG_SET_DOT_SETPOINT 32
// Atom -> Tiva: Set new dot setpoints (Tuning Message). Also include new f32K[PID][XYZH]Dot values (if changed)
//
// cmd is a uint32 instead of enum due to the "flag" functionality that would introduce complications if cmd were to been
// an enum. It would not be possible to send multiple command flags in the cmd field without having lots and lots of 
// enums for every combination of flags.
//
// A reminder on bitwise ops with flags, flags are read by checking cmd & FLAG and erased by cmd &= ~FLAG



package maav;

// A message sent from Atom to Tiva to set a new setpoint or issue commands (takeoff, land, etc.)
message target
{
	required uint32 cmd = 1;
	required uint32 timestamp = 2;
	optional float x = 3;
	optional float y = 4;
	optional float z = 5;
	optional float h = 6;
}

// A message sent from Atom to Tiva to give location information
message pose
{
	required uint32 cmd = 1;
	required float timestamp = 2;
	optional float xactual = 7;
	optional float yactual = 8;
	optional float zactual = 9;
}

// A message sent and received by both Atom and Tiva for the purpose of tuning gains/etc.
message tuning
{
	required uint32 cmd = 1;
	required float timestamp = 2;
	optional float KPX = 30;
	optional float KIX = 31;
	optional float KDX = 32;
	optional float KPY = 33;
	optional float KIY = 34;
	optional float KDY = 35;
	optional float KPZ = 36;
	optional float KIZ = 37;
	optional float KDZ = 38;
	optional float KPXdot = 39;
	optional float KIXdot = 40;
	optional float KDXdot = 41;
	optional float KPYdot = 42;
	optional float KIYdot = 43;
	optional float KDYdot = 44;
	optional float KPZdot = 45;
	optional float KIZdot = 46;
	optional float KDZdot = 47;
	optional float KPH = 48;
	optional float KIH = 49;
	optional float KDH = 50;
	optional float x = 3;
	optional float y = 4;
	optional float z = 5;
	optional float h = 6;
	optional float xdot = 51;
	optional float ydot = 52;
	optional float zdot = 53;
}

// A message sent from Tiva to Atom to tell it things
message feedback
{
	required uint32 cmd = 1;
	required float timestamp = 2;
	optional float xest = 7;
	optional float yest = 8;
	optional float zest = 9;
	optional float rest = 10;
	optional float pest = 11;
	optional float hest = 12;
	required uint32 status = 13;
	optional float xdot = 14;
	optional float ydot = 15;
	optional float zdot = 16;
	optional float Ax = 17;
	optional float Ay = 18;
	optional float Az = 19;
	optional float rdot = 20;
	optional float pdot = 21;
	optional float hdot = 22;
}

// This is around to help with a Tiva side implementation. 
// This message shall always contain all values the Tiva will have to handle. Values not in "all" will not be handled.
message all
{
	required uint32 cmd = 1;
	required uint32 timestamp = 2;
	optional float x = 3;
	optional float y = 4;
	optional float z = 5;
	optional float h = 6;
	optional float xactual = 7;
	optional float yactual = 8;
	optional float zactual = 9;
	optional float KPX = 30;
	optional float KIX = 31;
	optional float KDX = 32;
	optional float KPY = 33;
	optional float KIY = 34;
	optional float KDY = 35;
	optional float KPZ = 36;
	optional float KIZ = 37;
	optional float KDZ = 38;
	optional float KPXdot = 39;
	optional float KIXdot = 40;
	optional float KDXdot = 41;
	optional float KPYdot = 42;
	optional float KIYdot = 43;
	optional float KDYdot = 44;
	optional float KPZdot = 45;
	optional float KIZdot = 46;
	optional float KDZdot = 47;
	optional float KPH = 48;
	optional float KIH = 49;
	optional float KDH = 50;
	optional float xdot = 51;
	optional float ydot = 52;
	optional float zdot = 53;
}